#!/usr/bin/env python3
"""
Script para verificar usu√°rios no banco
"""
import sqlite3
import hashlib

def check_users():
    """Verifica usu√°rios no banco"""
    try:
        conn = sqlite3.connect('backend/aquicultura.db')
        cursor = conn.cursor()
        
        # Verificar usu√°rios
        cursor.execute("SELECT id, email, full_name, papel, is_active FROM users")
        users = cursor.fetchall()
        
        print(f"üìä Total de usu√°rios: {len(users)}")
        
        for user in users:
            print(f"  ID: {user[0]}, Email: {user[1]}, Nome: {user[2]}, Papel: {user[3]}, Ativo: {user[4]}")
            
        return users
        
    except Exception as e:
        print(f"‚ùå Erro ao verificar usu√°rios: {e}")
        return []
    finally:
        if 'conn' in locals():
            conn.close()

def create_admin_user():
    """Cria usu√°rio admin se n√£o existir"""
    try:
        conn = sqlite3.connect('backend/aquicultura.db')
        cursor = conn.cursor()
        
        # Verificar se admin j√° existe
        cursor.execute("SELECT id FROM users WHERE email = 'admin@admin.com'")
        if cursor.fetchone():
            print("‚úÖ Usu√°rio admin j√° existe!")
            return True
        
        # Criar hash da senha (usando o mesmo m√©todo do backend)
        password = "admin123"
        # Simular o hash que o backend usa (bcrypt)
        # Por simplicidade, vou usar um hash simples aqui
        password_hash = "$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj3bp.Gm.F5u"  # admin123
        
        # Inserir usu√°rio admin
        cursor.execute("""
            INSERT INTO users (email, full_name, hashed_password, papel, is_active)
            VALUES (?, ?, ?, ?, ?)
        """, ("admin@admin.com", "Administrador", password_hash, "ROOT", True))
        
        conn.commit()
        print("‚úÖ Usu√°rio admin criado com sucesso!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao criar usu√°rio admin: {e}")
        return False
    finally:
        if 'conn' in locals():
            conn.close()

def main():
    """Fun√ß√£o principal"""
    print("üë• Verificando usu√°rios...")
    
    users = check_users()
    
    if not users:
        print("‚ö†Ô∏è  N√£o h√° usu√°rios no sistema!")
        print("üîß Criando usu√°rio admin...")
        create_admin_user()
        check_users()
    else:
        # Verificar se h√° um usu√°rio ROOT
        root_users = [u for u in users if u[3] == 'ROOT']
        if not root_users:
            print("‚ö†Ô∏è  N√£o h√° usu√°rio ROOT no sistema!")
            print("üîß Criando usu√°rio admin...")
            create_admin_user()

if __name__ == "__main__":
    main()
