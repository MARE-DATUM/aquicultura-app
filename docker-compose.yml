version: '3.8'

# Custom network for better service communication
networks:
  aquicultura-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: aquicultura-db
    environment:
      POSTGRES_USER: aquicultura_user
      POSTGRES_PASSWORD: aquicultura_password
      POSTGRES_DB: aquicultura_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=pt_AO.UTF-8"
      TZ: Africa/Luanda
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    ports:
      - "5432:5432"
    networks:
      - aquicultura-network
    restart: unless-stopped
    command: ["postgres", "-c", "hba_file=/etc/postgresql/pg_hba.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aquicultura_user -d aquicultura_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aquicultura-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --timeout 300
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    networks:
      - aquicultura-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: application
    container_name: aquicultura-backend
    ports:
      - "8000:8000"
    env_file:
      - ./config/development.env
    environment:
      - DATABASE_URL=postgresql://aquicultura_user:aquicultura_password@db:5432/aquicultura_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-2024
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://127.0.0.1:3000,http://127.0.0.1:8000
      - ENV=development
      - DEBUG=true
      - TZ=Africa/Luanda
    volumes:
      - ./backend:/app:ro
    networks:
      - aquicultura-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: aquicultura-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_APP_NAME=App de Gest√£o dos 21 Projectos de Aquicultura
      - VITE_APP_VERSION=1.0.0
      - TZ=Africa/Luanda
    networks:
      - aquicultura-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

# Named volumes for data persistence
volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
